@using ArtStation_Dashboard.ViewModels.Order
@model OrderInvoiceVM

@{
    var culture = System.Globalization.CultureInfo.CurrentUICulture;
    var dir = culture.TextInfo.IsRightToLeft ? "rtl" : "ltr";
    var lang = culture.Name;
}

<!-- Token for AJAX -->
<form id="hiddenForm">@Html.AntiForgeryToken()</form>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-primary alert-dismissible text-white fade show" role="alert">
        <span class="alert-icon align-middle">
            <span class="material-symbols-rounded text-md"></span>
        </span>
        <span class="alert-text"><strong>@TempData["SuccessMessage"]!</strong></span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="container-fluid" dir="@dir" >
    <div class="row justify-content-center">
        <div class="col-12 col-xl-10">
            <div class="row align-items-center mb-4">
                <div class="col text-center">
                    <h2 class="h4 fw-bold mb-1">
                        <span class="text-muted text-uppercase small">@(("فاتورة", "Invoice").Localize(lang))</span><br />
                        <span class="text-dark">#@(@Model.Order.OrderNum + 1000)</span>
                    </h2>
                </div>
            </div>

            <div class="card shadow" id="invoice">
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <img src="~/Uploads/Logo/logo.jpg" class="img-fluid  rounded mb-3" style="width:15%" alt="Logo">
                        <div>
                            <span class="small text-muted text-uppercase">@(("رقم الفاتورة", "Invoice #").Localize(lang))</span><br />
                            <strong>#@(@Model.Order.OrderNum + 1000)</strong>
                        </div>
                    </div>

                    <div class="bg-light p-3 rounded mb-4">
                        <p class="mb-1"><strong>@(("تاريخ الطلب", "Order Date").Localize(lang)):</strong> @Model.Order.OrderDate.ToString()</p>
                        <p class="mb-2 fw-bold text-primary">@(("بيانات العميل", "Client Data").Localize(lang))</p>
                        <ul class="list-unstyled small mb-0">
                            <li><strong>@(("الاسم", "Client Name").Localize(lang)):</strong> @Model.Order.FullName</li>
                            <li><strong>@(("رقم الهاتف", "Client PhoneNumber").Localize(lang)):</strong> @Model.Order.CustomerPhone</li>
                            <li><strong>@(("المدينة", "City").Localize(lang)):</strong> @Model.Order.City</li>
                            @if (Model.Order.AddressDetails != null)
                            {
                                <li><strong>@(("العنوان", "Address").Localize(lang)):</strong> @Model.Order.AddressDetails</li>
                            }
                        </ul>
                        <p class="mt-3 mb-0 small text-muted">
                            <strong>@(("تاريخ الاستحقاق", "Due Date").Localize(lang)):</strong> @DateTime.Now.ToString("yyyy/MM/dd")
                        </p>
                    </div>

                    <table class="table table-hover table-bordered text-center align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>#</th>
                                <th>@(("اسم المنتج", "Product Name").Localize(lang))</th>
                                <th>@(("تفاصيل المنتج", "Product Details").Localize(lang))</th>
                                <th>@(("العدد", "Quantity").Localize(lang))</th>
                                <th>@(("السعر", "Price").Localize(lang))</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Items.Count(); i++)
                            {
                                var item = Model.Items.ElementAt(i);
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td>@item.ProductName</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(item.Size))
                                        {
                                            <div><span class="badge bg-secondary">@item.Size</span></div>
                                        }
                                        @if (!string.IsNullOrEmpty(item.Color))
                                        {
                                            <div><span class="badge bg-primary">@item.Color</span></div>
                                        }
                                        @if (!string.IsNullOrEmpty(item.Flavour))
                                        {
                                            <div><span class="badge bg-success">@item.Flavour</span></div>
                                        }
                                    </td>
                                    <td>@item.Quantity</td>
                                    <td>@item.SubTotal</td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div class="row justify-content-end mt-4">
                        <div class="col-md-6 bg-light p-4 rounded shadow-sm">
                            <p class="mb-2">
                                <strong>@(("عدد المنتجات", "Total Quantity").Localize(lang)):</strong> @Model.Items.Sum(i => i.Quantity)
                            </p>
                            <p class="mb-2">
                                <strong>@(("الإجمالى الفرعى", "Subtotal").Localize(lang)):</strong> @Model.Order.SubTotal
                            </p>
                            <p class="mb-2">
                                <strong>@(("مبلغ التوصيل", "Shipping Cost").Localize(lang)):</strong> @Model.Order.DeliveryCost
                            </p>
                            <p class="mb-0 h5 text-success">
                                <strong>@(("المبلغ الإجمالى", "Total Amount").Localize(lang)):</strong> @(@Model.Order.SubTotal + Model.Order.DeliveryCost)
                            </p>
                        </div>
                    </div>
                </div> <!-- /.card-body -->
            </div> <!-- /.card -->
        </div>
    </div>
</div>

<div class="text-center mt-4 ">
    <button class="btn btn-outline-success px-4 me-3" id="readyButton" data-orderid="@Model.Order.OrderNum">
        @(("تجهيز الطلب", "Ready Order").Localize(lang))
    </button>
    <button id="printButton" class="btn btn-outline-danger px-4" onclick="printDiv('invoice')" disabled>
        @(("طباعة", "Print").Localize(lang)) <i class="fa-solid fa-print ms-2"></i>
    </button>
</div>



<script>
    const readyButton = document.getElementById('readyButton');
    const printButton = document.getElementById('printButton');

    readyButton.addEventListener('click', function () {
        const orderId = this.getAttribute('data-orderid');
        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

        fetch(`/Order/ReadyOrder?orderid=${orderId}`, {
            method: 'POST',
            headers: {
                'RequestVerificationToken': token
            }
        })
        .then(response => {
            if (response.ok) {
                printButton.disabled = false;
                printButton.classList.remove("btn-outline-danger");
                printButton.classList.add("btn-danger");
                printButton.style.cursor = "pointer";

                readyButton.innerHTML = "✅ تم التجهيز";
                readyButton.classList.remove("btn-outline-success");
                readyButton.classList.add("btn-success");
                readyButton.disabled = true;
            } else {
                alert("فشل في تجهيز الطلب");
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert("حدث خطأ أثناء تجهيز الطلب.");
        });
    });

    function printDiv(divId) {
         var printContents = document.getElementById(divId).innerHTML;
         var originalContents = document.body.innerHTML;

         document.body.innerHTML = printContents;
         window.print();
         document.body.innerHTML = originalContents;
     }
</script>
