@model ProductCreation
@{
    var language = ViewData["Language"] as string ?? "en";
    var flavourCount = Model.Flavours?.Count ?? 0;
}
<p class="text-muted fw-bold nav-heading mt-4 mb-2 bol">
    <span>@(("النكهات", "Flavours").Localize(language))</span>
</p>

<div id="FlavourInput">
    <div class="row g-3 align-items-end">
        <div class="col-md-5">
            <div class="input-group input-group-static">
                <label class="form-label">@(("النكهه بالعربية", "Flavour in Arabic").Localize(language))</label>
                <input type="text" id="flavourAR" class="form-control" />
            </div>
        </div>
        <div class="col-md-5">
            <div class="input-group input-group-static">
                <label class="form-label">@(("النكهه بالإنجليزية", "Flavour in English").Localize(language))</label>
                <input type="text" id="flavourEN" class="form-control" />
            </div>
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <button type="button" id="addFlavourBtn" class="btn btn-outline-secondary w-100">
                @(("إضافة النكهة", "Add Flavour").Localize(language))
            </button>
        </div>
    </div>
</div>

<!-- Existing + new flavours will appear here -->
<div id="dynamicFlavourInputs" class="mt-4">
    @for (int i = 0; i < flavourCount; i++)
    {
    <input type="hidden" asp-for="Flavours[i].Id"  />
        <div class="row g-3 align-items-end mb-2 border p-3 rounded bg-light flavour-row">
            <div class="col-md-5">
                <label class="form-label">@(("النكهه بالعربية", "Flavour (AR)").Localize(language))</label>
                <input type="text" name="Flavours[@i].FlavourAR" class="form-control" value="@Model.Flavours[i].FlavourAR" />
            </div>
            <div class="col-md-5">
                <label class="form-label">@(("النكهه بالإنجليزية", "Flavour (EN)").Localize(language))</label>
                <input type="text" name="Flavours[@i].FlavourEN" class="form-control" value="@Model.Flavours[i].FlavourEN" />
            </div>
            <div class="col-md-2 d-flex align-items-end">
                <button type="button" class="btn btn-danger w-100 deleteFlavourBtn">
                    @(("حذف", "Delete").Localize(language))
                </button>
            </div>
        </div>
    }
</div>

<input type="hidden" id="flavourIndex" value="@flavourCount" />

<script>
    let flavourIndex = parseInt(document.getElementById("flavourIndex").value || "0");

    const flavourAR = document.getElementById("flavourAR");
    const flavourEN = document.getElementById("flavourEN");
    const addFlavourBtn = document.getElementById("addFlavourBtn");
    const dynamicFlavourInputs = document.getElementById("dynamicFlavourInputs");

    function reindexFlavourInputs() {
        const flavourRows = document.querySelectorAll(".flavour-row");
        flavourRows.forEach((row, index) => {
            row.querySelector('input[name*=".Id"]').setAttribute("name", `Flavours[${index}].Id`);
            row.querySelector('input[name*=".FlavourAR"]').setAttribute("name", `Flavours[${index}].FlavourAR`);
            row.querySelector('input[name*=".FlavourEN"]').setAttribute("name", `Flavours[${index}].FlavourEN`);
        });
        document.getElementById("flavourIndex").value = flavourRows.length;
    }

    addFlavourBtn.addEventListener("click", () => {
        const ar = flavourAR.value.trim();
        const en = flavourEN.value.trim();

        if (!ar || !en) {
            alert("Please fill in both flavour fields.");
            return;
        }

        const wrapper = document.createElement("div");
        wrapper.className = "row g-3 align-items-end mb-2 border p-3 rounded bg-light flavour-row";

        wrapper.innerHTML = `
                        <input type="hidden" name="Flavours[${flavourIndex}].Id" value="0" />
                <div class="col-md-5">
                    <label class="form-label">Flavour (AR)</label>
                        <input type="text" name="Flavours[${flavourIndex}].FlavourAR" class="form-control" value="${ar}" />
                </div>
                <div class="col-md-5">
                    <label class="form-label">Flavour (EN)</label>
                        <input type="text" name="Flavours[${flavourIndex}].FlavourEN" class="form-control" value="${en}" />
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="button" class="btn btn-danger w-100 deleteFlavourBtn">Delete</button>
                </div>
            `;

        wrapper.querySelector(".deleteFlavourBtn").addEventListener("click", () => {
            wrapper.remove();
            reindexFlavourInputs();
        });

        dynamicFlavourInputs.appendChild(wrapper);

        flavourAR.value = "";
        flavourEN.value = "";
        flavourIndex++;
        reindexFlavourInputs();
    });

    // Enable delete for preloaded flavours
    document.querySelectorAll(".deleteFlavourBtn").forEach(btn => {
        btn.addEventListener("click", function () {
            this.closest(".flavour-row").remove();
            reindexFlavourInputs();
        });
    });
</script>
