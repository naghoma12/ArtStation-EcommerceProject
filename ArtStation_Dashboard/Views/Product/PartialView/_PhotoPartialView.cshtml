@model ProductCreation
@{
    var language = ViewData["Language"] as string ?? "en";
}

<p class="text-muted fw-bold nav-heading mt-4 mb-2 bol">
    <span>@(("الصور", "Photos").Localize(language))</span>
</p>

<div class="form-group">
    <label class="form-label">@(("ادخل صور المنتج", "Enter Product Photos").Localize(language))</label>
    <input asp-for="Images" type="hidden"/>
    <input multiple asp-for="Files" class="form-control form-control-lg" type="file" id="imageUpload" accept=".png, .jpg, .jpeg" />
    <p id="error-message" style="color: red; display: none;">Only PNG, JPG, JPEG images are allowed.</p>

    <input type="hidden" id="deletedPhotosContainer" name="DeletedPhotos" />
    <!-- Hidden input to store accumulated files -->
    <input type="file" id="virtualFilesInput" name="Files" multiple style="display:none;" />
    <!-- Combined preview container -->
    <div id="imagePreview" class="row mt-3">
        <!-- Existing images -->
        @if (Model.Images != null && Model.Images.Any())
        {
            foreach (var img in Model.Images)
            {
                <div class="col-3 mb-3 existing-image" data-name="@img">
                    <div class="image-container position-relative">
                        <img src="~/Uploads/Products/@img" class="img-fluid rounded" alt="Product Image" />
                        <span class="delete-icon position-absolute top-0 end-0 bg-danger text-white px-2 cursor-pointer" style="cursor:pointer;">&#10006;</span>
                        <input type="hidden" name="ExistingImages" value="@img" />
                    </div>
                </div>
            }
        }
    </div>
</div>

<script>
    const imageUpload = document.getElementById("imageUpload");
    const previewContainer = document.getElementById("imagePreview");
    const errorMessage = document.getElementById("error-message");
    const deletedPhotosContainer = document.getElementById("deletedPhotosContainer");

    let fileList = [];

    imageUpload.addEventListener("change", function () {
        errorMessage.style.display = "none";

        const newFiles = Array.from(imageUpload.files);
        let isValid = true;

        // Count how many images already exist or are added
        const existingImagesCount = document.querySelectorAll(".existing-image").length;
        const currentPreviewsCount = previewContainer.querySelectorAll(".col-3:not(.existing-image)").length;
        const totalCount = existingImagesCount + currentPreviewsCount + newFiles.length;

        if (totalCount > 5) {
            errorMessage.textContent = "You can upload up to 5 images only.";
            errorMessage.style.display = "block";
            imageUpload.value = "";
            return;
        }

        newFiles.forEach(file => {
            const ext = file.name.split('.').pop().toLowerCase();
            if (!["png", "jpg", "jpeg"].includes(ext)) {
                isValid = false;
                return;
            }

            fileList.push(file);

            const reader = new FileReader();
            reader.onload = function (e) {
                const col = document.createElement("div");
                col.className = "col-3 mb-3";
                col.innerHTML = `
                        <div class="image-container position-relative">
                            <img src="${e.target.result}" class="img-fluid rounded" alt="Preview Image" />
                            <span class="delete-icon position-absolute top-0 end-0 bg-danger text-white px-2" style="cursor:pointer;">&#10006;</span>
                        </div>
                    `;

                col.querySelector(".delete-icon").addEventListener("click", () => {
                    col.remove();
                    fileList = fileList.filter(f => f.name !== file.name);
                    updateInputFiles();
                });

                previewContainer.appendChild(col);
            };
            reader.readAsDataURL(file);
        });

        if (!isValid) {
            errorMessage.textContent = "Only PNG, JPG, JPEG images are allowed.";
            errorMessage.style.display = "block";
            imageUpload.value = "";
            return;
        }

        imageUpload.value = "";
        updateInputFiles();
    });

    function updateInputFiles() {
        const dataTransfer = new DataTransfer();
        fileList.forEach(file => dataTransfer.items.add(file));
        imageUpload.files = dataTransfer.files;
    }

    // Existing image deletion
    document.querySelectorAll(".existing-image .delete-icon").forEach(btn => {
        btn.addEventListener("click", function () {
            const imageDiv = this.closest(".existing-image");
            const name = imageDiv.dataset.name;
            const input = document.createElement("input");
            input.type = "hidden";
            input.name = "DeletedPhotos";
            input.value = name;
            deletedPhotosContainer.appendChild(input);
            imageDiv.remove();
        });
    });
</script>

