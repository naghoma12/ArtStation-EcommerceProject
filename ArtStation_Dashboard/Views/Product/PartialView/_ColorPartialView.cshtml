@model ProductCreation
@{
    var language = ViewData["Language"] as string ?? "en";

    // You can fetch this from DB or service too
    var colorOptions = new[]
    {
        new { NameEN = "Red", NameAR = "أحمر", Hex = "#FF0000" },
        new { NameEN = "Blue", NameAR = "أزرق", Hex = "#0000FF" },
        new { NameEN = "Green", NameAR = "أخضر", Hex = "#008000" },
        new { NameEN = "Black", NameAR = "أسود", Hex = "#000000" },
        new { NameEN = "White", NameAR = "أبيض", Hex = "#FFFFFF" }
    };
    var colorCount = Model.Colors?.Count ?? 0;
}
<p class="text-muted fw-bold nav-heading mb-2 bol">
    <span>@(("الألوان", "Colors").Localize(language))</span>
</p>

<div class="row" id="colorList">
    @for (int i = 0; i < colorOptions.Length; i++)
    {
        <input asp-for="Id" type="hidden"/>
        var color = colorOptions[i];
        string nameEN = color.NameEN;
        string nameAR = color.NameAR;
        string hex = color.Hex;
        string displayName = language == "ar" ? nameAR : nameEN;
        string checkboxId = $"color_{i}";

        bool isChecked = Model.Colors.Any(c => c.Hex == hex);
    <div class="col-md-3 mb-2">
        <div class="form-check">
            <input class="form-check-input color-check" type="checkbox"
                   data-name-en="@nameEN" data-name-ar="@nameAR" data-hex="@hex"
                   id="@checkboxId" @(isChecked ? "checked" : "")>
            <label class="form-check-label" for="@checkboxId">
                <span style="display:inline-block;width:15px;height:15px;background:@hex;border:1px solid #ccc;margin-right:5px;"></span>
                @displayName
            </label>
        </div>
    </div>
    }
</div>

<div id="selectedColorsContainer"></div>

<script>
    const language = "@language";
    const updateSelectedColors = () => {
        const selectedColorsContainer = document.getElementById("selectedColorsContainer");
        selectedColorsContainer.innerHTML = "";

        const selected = document.querySelectorAll(".color-check:checked");
        selected.forEach((checkbox, i) => {
            const nameEN = checkbox.dataset.nameEn;
            const nameAR = checkbox.dataset.nameAr;
            const hex = checkbox.dataset.hex;

            selectedColorsContainer.innerHTML += `
                  <input type="hidden" asp-for="Colors[${i}].Id" />

                    <input type="hidden" name="Colors[${i}].NameEN" value="${nameEN}" />
                    <input type="hidden" name="Colors[${i}].NameAR" value="${nameAR}" />
                    <input type="hidden" name="Colors[${i}].Hex" value="${hex}" />
                `;
        });
    };

    // Run on load to add existing values
    window.addEventListener("DOMContentLoaded", updateSelectedColors);

    // Run on checkbox change
    document.getElementById("colorList").addEventListener("change", updateSelectedColors);
</script>

